---
openapi: 3.0.1
info:
  title: Metathon Backend API
  version: v1
  description: API documentation for the Metathon Document Ingestion & AI Transcription
    Module
paths:
  "/api/submissions":
    get:
      summary: Lists all submissions
      tags:
      - Submissions
      parameters:
      - name: status
        in: query
        schema:
          type: string
          enum:
          - pending
          - processing
          - success
          - failed
        required: false
        description: Filter submissions by status
      - name: team_name
        in: query
        schema:
          type: string
        required: false
        description: Filter submissions by team name
      - name: project
        in: query
        schema:
          type: string
        required: false
        description: Filter submissions by project
      responses:
        '200':
          description: submissions found
          content:
            application/json:
              schema:
                type: object
                properties:
                  submissions:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Submission"
                required:
                - submissions
  "/api/submissions/{id}":
    get:
      summary: Retrieves a submission
      tags:
      - Submissions
      parameters:
      - name: id
        in: path
        required: true
        description: Submission ID
        schema:
          type: integer
      responses:
        '200':
          description: submission found
          content:
            application/json:
              schema:
                type: object
                properties:
                  submission:
                    "$ref": "#/components/schemas/Submission"
                required:
                - submission
        '404':
          description: submission not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/summaries":
    get:
      summary: Gets summaries grouped by team and project
      tags:
      - Submissions
      responses:
        '200':
          description: summaries found
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        filename:
                          type: string
                        file_type:
                          type: string
                          enum:
                          - pdf
                          - pptx
                          - docx
                          - jpg
                          - png
                          - zip
                        summary:
                          type: string
                          nullable: true
                        created_at:
                          type: string
                          format: date-time
                      required:
                      - id
                      - filename
                      - file_type
  "/api/start_ingestion":
    post:
      summary: Starts the document ingestion process
      tags:
      - Ingestion
      responses:
        '200':
          description: ingestion process started
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
  "/api/team_summaries":
    get:
      summary: Lists all team summaries
      tags:
      - Team Summaries
      parameters:
      - name: status
        in: query
        schema:
          type: string
          enum:
          - pending
          - processing
          - success
          - failed
        required: false
        description: Filter team summaries by status
      responses:
        '200':
          description: team summaries found
          content:
            application/json:
              schema:
                type: object
                properties:
                  team_summaries:
                    type: array
                    items:
                      "$ref": "#/components/schemas/TeamSummary"
                required:
                - team_summaries
  "/api/team_summaries/{team_name}":
    get:
      summary: Retrieves a team summary
      tags:
      - Team Summaries
      parameters:
      - name: team_name
        in: path
        required: true
        description: Team name
        schema:
          type: string
      responses:
        '200':
          description: team summary found
          content:
            application/json:
              schema:
                type: object
                properties:
                  team_summary:
                    "$ref": "#/components/schemas/TeamSummary"
                required:
                - team_summary
        '404':
          description: team summary not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/team_summaries/generate":
    post:
      summary: Generates a comprehensive summary for a team
      tags:
      - Team Summaries
      parameters:
      - name: team_name
        in: query
        schema:
          type: string
        required: true
        description: The team name to generate a summary for
      responses:
        '200':
          description: team summary generation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
servers:
- url: http://localhost:3000
  description: Development server
- url: https://metathon-api.example.com
  description: Production server
components:
  schemas:
    Submission:
      type: object
      properties:
        id:
          type: integer
        team_name:
          type: string
        filename:
          type: string
        file_type:
          type: string
          enum:
          - pdf
          - pptx
          - docx
          - jpg
          - png
          - zip
        source_url:
          type: string
        raw_text:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        status:
          type: string
          enum:
          - pending
          - processing
          - success
          - failed
        project:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - team_name
      - filename
      - file_type
      - source_url
      - status
    TeamSummary:
      type: object
      properties:
        id:
          type: integer
        team_name:
          type: string
        content:
          type: string
          nullable: true
        status:
          type: string
          enum:
          - pending
          - processing
          - success
          - failed
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - team_name
      - status
